{"ast":null,"code":"var _jsxFileName = \"D:\\\\todoapp\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    todo,\n    getTodoEditingId,\n    todoEditingId,\n    onEditTodo,\n    index,\n    markCompleted\n  } = props;\n  const [text, setText] = useState(todo.text);\n  const isEditing = todoEditingId === todo.id;\n\n  const editTodo = () => {\n    onEditTodo({ ...todo,\n      text\n    }, index);\n  };\n\n  return (\n    /*#__PURE__*/\n    // className={'${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}'} >\n    _jsxDEV(\"li\", {\n      className: isEditing ? 'editing' : '' & todo.isCompleted ? 'completed' : '',\n      children: !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: todo.isCompleted,\n          onChange: () => markCompleted(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          onDoubleClick: () => getTodoEditingId(todo.id),\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit\",\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onBlur: editTodo,\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            editTodo();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  );\n}, \"ENxShqfBZ6umhL7W23ZWWWuTo5U=\")), \"ENxShqfBZ6umhL7W23ZWWWuTo5U=\");\n\n_c2 = Todo;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo$memo\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"names":["React","memo","useState","Todo","props","todo","getTodoEditingId","todoEditingId","onEditTodo","index","markCompleted","text","setText","isEditing","id","editTodo","isCompleted","e","target","value","key"],"sources":["D:/todoapp/src/components/Todo.js"],"sourcesContent":["import React, {memo, useState} from \"react\";\r\n\r\nconst Todo = memo(props =>{\r\n    const { todo, getTodoEditingId, todoEditingId, onEditTodo, index, markCompleted } = props\r\n    const [text, setText] = useState(todo.text)\r\n    const isEditing = todoEditingId === todo.id\r\n    const editTodo = () => {\r\n        onEditTodo({\r\n            ...todo,\r\n            text\r\n        }, index)\r\n    }\r\n    return(\r\n            // className={'${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}'} >\r\n            <li className={isEditing ? 'editing' : '' & todo.isCompleted ? 'completed' : ''} >\r\n            {!isEditing ?\r\n                <div className=\"view\">\r\n                    <input \r\n                        className=\"toggle\" \r\n                        type=\"checkbox\" \r\n                        checked= {todo.isCompleted}\r\n                        onChange={() => markCompleted(todo.id)}\r\n                    />\r\n                    <label onDoubleClick={ () =>getTodoEditingId(todo.id)} >{todo.text}</label>\r\n                    <button className=\"destroy\"></button>\r\n                </div> :\r\n                <input \r\n                    className=\"edit\" \r\n                    type=\"text\" \r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    onBlur={editTodo}\r\n                    onKeyPress={(e) =>{\r\n                        if(e.key === 'Enter') {\r\n                            editTodo()\r\n                        }\r\n                    }}\r\n                />\r\n                }\r\n        </li>\r\n    )\r\n})\r\n\r\nexport default Todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,QAArB,QAAoC,OAApC;;;AAEA,MAAMC,IAAI,iCAAGF,IAAI,SAACG,KAAK,IAAG;EAAA;;EACtB,MAAM;IAAEC,IAAF;IAAQC,gBAAR;IAA0BC,aAA1B;IAAyCC,UAAzC;IAAqDC,KAArD;IAA4DC;EAA5D,IAA8EN,KAApF;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACG,IAAI,CAACM,IAAN,CAAhC;EACA,MAAME,SAAS,GAAGN,aAAa,KAAKF,IAAI,CAACS,EAAzC;;EACA,MAAMC,QAAQ,GAAG,MAAM;IACnBP,UAAU,CAAC,EACP,GAAGH,IADI;MAEPM;IAFO,CAAD,EAGPF,KAHO,CAAV;EAIH,CALD;;EAMA;IAAA;IACQ;IACA;MAAI,SAAS,EAAEI,SAAS,GAAG,SAAH,GAAe,KAAKR,IAAI,CAACW,WAAV,GAAwB,WAAxB,GAAsC,EAA7E;MAAA,UACC,CAACH,SAAD,gBACG;QAAK,SAAS,EAAC,MAAf;QAAA,wBACI;UACI,SAAS,EAAC,QADd;UAEI,IAAI,EAAC,UAFT;UAGI,OAAO,EAAGR,IAAI,CAACW,WAHnB;UAII,QAAQ,EAAE,MAAMN,aAAa,CAACL,IAAI,CAACS,EAAN;QAJjC;UAAA;UAAA;UAAA;QAAA,QADJ,eAOI;UAAO,aAAa,EAAG,MAAKR,gBAAgB,CAACD,IAAI,CAACS,EAAN,CAA5C;UAAA,UAAyDT,IAAI,CAACM;QAA9D;UAAA;UAAA;UAAA;QAAA,QAPJ,eAQI;UAAQ,SAAS,EAAC;QAAlB;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,gBAWG;QACI,SAAS,EAAC,MADd;QAEI,IAAI,EAAC,MAFT;QAGI,KAAK,EAAEA,IAHX;QAII,QAAQ,EAAEM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ1B;QAKI,MAAM,EAAEJ,QALZ;QAMI,UAAU,EAAGE,CAAD,IAAM;UACd,IAAGA,CAAC,CAACG,GAAF,KAAU,OAAb,EAAsB;YAClBL,QAAQ;UACX;QACJ;MAVL;QAAA;QAAA;QAAA;MAAA;IAZJ;MAAA;MAAA;MAAA;IAAA;EAFR;AA6BH,CAvCgB,kCAAP,iCAAV;;MAAMZ,I;AAyCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}