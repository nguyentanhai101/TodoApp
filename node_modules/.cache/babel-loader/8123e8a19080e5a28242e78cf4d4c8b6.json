{"ast":null,"code":"var _jsxFileName = \"D:\\\\todoapp\\\\src\\\\App.js\";\nimport React, { PureComponent } from 'react'; //components\n\nimport Header from './components/Header';\nimport Todolist from './components/Todolist';\nimport Footer from './components/Footer'; //css\n\nimport './App.css';\nimport './css/Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initData = [{\n  id: 1,\n  text: 'todo1',\n  isCompleted: true\n}, {\n  id: 2,\n  text: 'todo2',\n  isCompleted: false\n}];\n\nconst isNotCheckedAll = function () {\n  let todos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return todos.find(todo => todo.isCompleted === false);\n};\n\nconst filtersByStatus = function () {\n  let todos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  debugger;\n\n  switch (status) {\n    case 'ACTIVE':\n      return todos.filter(todo => todo.isCompleted === false);\n\n    case 'COMPLETE':\n      return todos.filter(todo => todo.isCompleted === true);\n\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== id);\n\n    default:\n      return todos;\n  }\n};\n\nclass App extends PureComponent {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.addTodo = function () {\n      let todo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _this.setState(preState => ({\n        todosList: [...preState.todosList, todo]\n      }));\n    };\n\n    this.getTodoEditingId = function () {\n      let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      _this.setState({\n        todoEditingId: id\n      });\n    };\n\n    this.onEditTodo = function () {\n      let todo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      if (index >= 0) {\n        const {\n          todosList: list\n        } = _this.state;\n        list.splice(index, 1, todo);\n\n        _this.setState({\n          todosList: list,\n          todoEditingId: ''\n        });\n      }\n    };\n\n    this.checkAllTodos = () => {\n      const {\n        todosList,\n        isCheckedAll\n      } = this.state;\n      this.setState(preState => ({\n        todosList: todosList.map(todo => ({ ...todo,\n          isCompleted: !isCheckedAll\n        })),\n        isCheckedAll: !preState.isCheckedAll\n      }));\n    };\n\n    this.markCompleted = function () {\n      let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      const {\n        todosList\n      } = _this.state;\n      const updatedList = todosList.map(todo => todo.id === id ? { ...todo,\n        isCompleted: !todo.isCompleted\n      } : todo);\n\n      _this.setState(preState => ({\n        todosList: updatedList,\n        isCheckedAll: !isNotCheckedAll(updatedList)\n      }));\n    };\n\n    this.setStateFilter = function () {\n      let status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      debugger;\n      const {\n        todosList\n      } = _this.state;\n\n      _this.setState({\n        todosList: todosList,\n        status\n      });\n    };\n\n    this.clearCompleted = () => {\n      const {\n        todosList\n      } = this.state;\n      this.setState({\n        todosList: filtersByStatus(todosList, 'ACTIVE')\n      });\n    };\n\n    this.removeTodo = function () {\n      let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      const {\n        todosList\n      } = _this.state;\n\n      _this.setState({\n        todosList: filtersByStatus(todosList, 'REMOVE', id)\n      });\n    };\n\n    this.state = {\n      todosList: initData,\n      todoEditingId: '',\n      isNotCheckedAll: false,\n      isCheckedAll: false,\n      status: 'ALL'\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      isNotCheckedAll: isNotCheckedAll(this.state.todosList)\n    });\n  }\n\n  render() {\n    const {\n      todosList,\n      todoEditingId,\n      isCheckedAll,\n      status\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        addTodo: this.addTodo,\n        isCheckedAll: isCheckedAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Todolist, {\n        todosList: filtersByStatus(todosList, status),\n        getTodoEditingId: this.getTodoEditingId,\n        todoEditingId: todoEditingId,\n        onEditTodo: this.onEditTodo,\n        markCompleted: this.markCompleted,\n        isCheckedAll: isCheckedAll,\n        checkAllTodos: this.checkAllTodos,\n        removeTodo: this.removeTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        setStateFilter: this.setStateFilter,\n        status: status,\n        clearCompleted: this.clearCompleted,\n        numOfTodos: todosList.length // mumOfTodosLeft={filtersByStatus(todosList, 'ACTIVE').length}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","PureComponent","Header","Todolist","Footer","initData","id","text","isCompleted","isNotCheckedAll","todos","find","todo","filtersByStatus","status","filter","App","constructor","props","addTodo","setState","preState","todosList","getTodoEditingId","todoEditingId","onEditTodo","index","list","state","splice","checkAllTodos","isCheckedAll","map","markCompleted","updatedList","setStateFilter","clearCompleted","removeTodo","componentWillMount","render","length"],"sources":["D:/todoapp/src/App.js"],"sourcesContent":["import React, { PureComponent } from 'react';\n\n//components\nimport Header from './components/Header';\nimport Todolist from './components/Todolist';\nimport Footer from './components/Footer';\n\n//css\nimport './App.css';\nimport './css/Todo.css'\n\nconst initData = [{\n  id: 1,\n  text: 'todo1',\n  isCompleted: true\n}, {\n  id: 2,\n  text: 'todo2',\n  isCompleted: false\n}]\n\nconst isNotCheckedAll = (todos = []) => todos.find(todo => todo.isCompleted === false)\nconst filtersByStatus = (todos = [], status = '', id = '') =>{\n  debugger\n  switch (status) {\n    case 'ACTIVE':\n      return todos.filter(todo => todo.isCompleted === false)\n    case 'COMPLETE':\n      return todos.filter(todo => todo.isCompleted === true)\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== id)\n    default:\n      return todos\n  }\n}\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todosList: initData,\n      todoEditingId: '',\n      isNotCheckedAll: false,\n      isCheckedAll: false,\n      status: 'ALL'\n    }\n  }\n  componentWillMount(){\n    this.setState({\n      isNotCheckedAll: isNotCheckedAll(this.state.todosList),\n    })\n  }\n\n  addTodo = (todo = {}) =>{\n    this.setState(preState => ({\n      todosList: [...preState.todosList, todo]\n    }))\n  }\n\n  getTodoEditingId = (id = '') =>{\n    this.setState({ todoEditingId : id})\n  }\n\n  onEditTodo = (todo = {}, index = -1) =>{\n    if(index >=0) {\n      const { todosList: list } = this.state\n      list.splice(index, 1, todo)\n      this.setState({ \n        todosList: list,\n        todoEditingId: ''\n      })\n    }\n  }\n\n  checkAllTodos = () => {\n    const { todosList, isCheckedAll } = this.state\n    this.setState(preState => ({\n      todosList: todosList.map(todo => ({ ...todo, isCompleted: !isCheckedAll})),\n      isCheckedAll: !preState.isCheckedAll\n    }))\n  }\n\n  markCompleted = (id = '') => {\n    const { todosList } = this.state\n    const updatedList = todosList.map(todo => todo.id === id ? ({ ...todo, isCompleted: !todo.isCompleted}) : todo)\n    this.setState(preState => ({\n      todosList: updatedList,\n      isCheckedAll: !isNotCheckedAll(updatedList)\n    }))\n  }\n\n  setStateFilter = (status = '') => {\n    debugger\n    const { todosList } = this.state\n    this.setState({\n      todosList: todosList,\n      status\n    })\n    \n  }\n\n  clearCompleted = () => {\n    const { todosList } = this.state\n    this.setState({\n      todosList: filtersByStatus(todosList, 'ACTIVE')\n    })\n  }\n\n  removeTodo = (id = '') =>{\n    const {todosList} = this.state\n    this.setState({\n      todosList: filtersByStatus(todosList, 'REMOVE', id)\n    })\n  }\n\n  render(){\n    const { todosList, todoEditingId, isCheckedAll, status } = this.state\n    return (\n      <div className=\"todoapp\">\n        \n          <Header \n            addTodo={this.addTodo}\n            isCheckedAll={isCheckedAll}\n          />\n          <Todolist \n            todosList={filtersByStatus(todosList, status)}\n            getTodoEditingId={this.getTodoEditingId}\n            todoEditingId={todoEditingId}\n            onEditTodo={this.onEditTodo}\n            markCompleted={this.markCompleted}\n            isCheckedAll={isCheckedAll}\n            checkAllTodos={this.checkAllTodos}\n            removeTodo={this.removeTodo}\n          />\n          <Footer\n            setStateFilter ={this.setStateFilter}\n            status={status}\n            clearCompleted={this.clearCompleted}\n            numOfTodos={todosList.length}\n            // mumOfTodosLeft={filtersByStatus(todosList, 'ACTIVE').length}\n          />\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}