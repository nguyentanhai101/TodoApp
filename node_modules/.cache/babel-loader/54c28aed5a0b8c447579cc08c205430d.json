{"ast":null,"code":"var _jsxFileName = \"D:\\\\todoapp\\\\src\\\\components\\\\Todo.js\";\nimport React, { memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = /*#__PURE__*/memo(_c = props => {\n  const {\n    todo,\n    getTodoEditingId,\n    todoEditingId\n  } = props;\n  const isEditing = todoEditingId === todo.id;\n  return (\n    /*#__PURE__*/\n    // className={'${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}'}\n    _jsxDEV(\"li\", {\n      className: (isEditing ? 'editing' : '', todo.isCompleted ? 'completed' : ''),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: todo.isCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  );\n});\n_c2 = Todo;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo$memo\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"names":["React","memo","Todo","props","todo","getTodoEditingId","todoEditingId","isEditing","id","isCompleted","text"],"sources":["D:/todoapp/src/components/Todo.js"],"sourcesContent":["import React, {memo} from \"react\";\r\n\r\nconst Todo = memo(props =>{\r\n    const { todo, getTodoEditingId, todoEditingId } = props\r\n    const isEditing = todoEditingId === todo.id\r\n\r\n    return(\r\n            // className={'${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}'}\r\n            <li className={isEditing ? 'editing' : '', todo.isCompleted ? 'completed' : ''} >\r\n            <div className=\"view\">\r\n                <input className=\"toggle\" type=\"checkbox\" checked= {todo.isCompleted} />\r\n                <label>{todo.text}</label>\r\n                <button className=\"destroy\"></button>\r\n            </div>\r\n        </li>\r\n    )\r\n})\r\n\r\nexport default Todo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,IAAf,QAA0B,OAA1B;;AAEA,MAAMC,IAAI,gBAAGD,IAAI,MAACE,KAAK,IAAG;EACtB,MAAM;IAAEC,IAAF;IAAQC,gBAAR;IAA0BC;EAA1B,IAA4CH,KAAlD;EACA,MAAMI,SAAS,GAAGD,aAAa,KAAKF,IAAI,CAACI,EAAzC;EAEA;IAAA;IACQ;IACA;MAAI,SAAS,GAAED,SAAS,GAAG,SAAH,GAAe,EAAxB,EAA4BH,IAAI,CAACK,WAAL,GAAmB,WAAnB,GAAiC,EAA/D,CAAb;MAAA,uBACA;QAAK,SAAS,EAAC,MAAf;QAAA,wBACI;UAAO,SAAS,EAAC,QAAjB;UAA0B,IAAI,EAAC,UAA/B;UAA0C,OAAO,EAAGL,IAAI,CAACK;QAAzD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAQL,IAAI,CAACM;QAAb;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAQ,SAAS,EAAC;QAAlB;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EAFR;AAUH,CAdgB,CAAjB;MAAMR,I;AAgBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}